# Server configuration
server:
  port: 8088
  servlet:
    context-path: /shopapp

api:
  prefix: api/v1

springdoc:
  api-docs:
    enabled: true
    path: /api/v1/api-docs
  swagger-ui:
    enabled: true
    path: /api/v1/swagger-ui.html
  paths-to-match:             # What API paths should be included in the docs
#    - /api/v1/**
    - /**
  default-produces-media-type: application/json
  paths-to-exclude:
    - /actuator/**




management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /api/v1/actuator
  endpoint:
    health:
      show-details: always


logging:
  level:
    org.apache.kafka: ERROR
    org.springframework.kafka: ERROR
    org.springframework.security: DEBUG  # Set log level for a Spring framework
    com.example.shopapp: INFO  # Example: your app's base package
  config: classpath:logback-spring.xml  # Custom logback configuration file


# Application properties
spring:
  kafka:
    listener:
      auto-startup: false
    admin:
      auto-create: false # If you are not using Kafka’s AdminClient at all, you can disable it by adding:
    bootstrap-servers: ${KAFKA_BROKER_SERVER:localhost}:${KAFKA_BROKER_PORT:9092}

    properties:
      spring.json.type.mapping: category:com.example.shopapp.models.Category,product:com.example.shopapp.models.Product

    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer




  flyway:
    enabled: true
    locations: classpath:db/migration, classpath:dev/db/migration
    baseline-on-migrate: true
    baseline-version: 0

  #  jackson:
#    date-format: yyyy-MM-dd HH:mm:ss
#    time-zone: UTC


  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  messages:
    basename: i18n/messages
    encoding: UTF-8
    fallback-to-system-locale: false
    cache-duration: 3600  # optional, seconds to cache
    # default-locale is NOT a standard spring.messages property

  application:
    name: shopapp

  # Datasource configuration
  datasource:
    url: jdbc:mysql://localhost:3306/shopapp_java
    #url: ${DBMS_CONNECTION:jdbc:mysql://localhost:3306/identity_service}
    #username: ${DBMS_USERNAME}
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
  data:
    redis:
      host: localhost
      port: 6379
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid, profile, email
            redirect-uri: "${GOOGLE_REDIRECT_URI:http://localhost:4300/auth/google/callback}" #sau khi user đăng nhập google thành công sẽ tự redirect đến trang này kèm code(của gooogle)
            authorization-grant-type: authorization_code
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo




# JWT
jwt:
  expiration: 2592000 #30 days = 30 * 24 * 60 * 60
  expiration-refresh-token: 5184000 #60 days = 60 * 24 * 60 * 60
  secretKey: LLaTGzHHnTJRbK0+yVZq3ff/H+/JRmmoK2SCMaaJ5Eo=
